<%- include('../partials/header', { user: user, title: title }) %>

<div class="container-fluid">
    <div class="row">
        <%- include('../partials/sidebar', { user: user }) %>
        
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">
                    <i class="fas fa-palette me-2"></i>
                    UI Customization
                    <span class="badge bg-warning ms-2">Super Admin</span>
                </h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button class="btn btn-success" onclick="saveAllCustomizations()">
                            <i class="fas fa-save me-1"></i>
                            Save All
                        </button>
                        <button class="btn btn-outline-danger" onclick="resetCustomizations()">
                            <i class="fas fa-undo me-1"></i>
                            Reset All
                        </button>
                    </div>
                </div>
            </div>

            <!-- Page Selection -->
            <div class="row mb-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-file-alt me-2"></i>
                                Page Customization
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="pageSelect" class="form-label">Select Page to Customize</label>
                                    <select class="form-select" id="pageSelect" onchange="loadPageCustomization()">
                                        <option value="">Choose a page...</option>
                                        <option value="login">Login Page</option>
                                        <option value="dashboard">Dashboard</option>
                                        <option value="admin">Admin Panel</option>
                                        <option value="users">User Management</option>
                                        <option value="controllers">Controller Management</option>
                                        <option value="global">Global Styles</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Live Preview</label>
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-outline-primary" onclick="togglePreview()">
                                            <i class="fas fa-eye me-1"></i>
                                            Preview Changes
                                        </button>
                                        <button class="btn btn-outline-info" onclick="exportCSS()">
                                            <i class="fas fa-download me-1"></i>
                                            Export CSS
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- CSS Editor -->
            <div class="row mb-4" id="cssEditorSection" style="display: none;">
                <div class="col-md-7">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-code me-2"></i>
                                CSS Editor
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label for="cssEditor" class="form-label">Custom CSS</label>
                                <textarea class="form-control" id="cssEditor" rows="20" placeholder="Enter your custom CSS here..."></textarea>
                            </div>
                            <div class="d-flex gap-2">
                                <button class="btn btn-primary" onclick="savePageCustomization()">
                                    <i class="fas fa-save me-1"></i>
                                    Save Changes
                                </button>
                                <button class="btn btn-outline-secondary" onclick="loadDefaultCSS()">
                                    <i class="fas fa-magic me-1"></i>
                                    Load Template
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-5">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-palette me-2"></i>
                                Quick Styling Tools
                            </h5>
                        </div>
                        <div class="card-body">
                            <!-- Color Palette -->
                            <div class="mb-4">
                                <h6>Brand Colors</h6>
                                <div class="row">
                                    <div class="col-4 mb-2">
                                        <label class="form-label small">Primary</label>
                                        <input type="color" class="form-control form-control-color" id="primaryColor" value="#007bff" onchange="updateColorVariable('primary', this.value)">
                                    </div>
                                    <div class="col-4 mb-2">
                                        <label class="form-label small">Success</label>
                                        <input type="color" class="form-control form-control-color" id="successColor" value="#28a745" onchange="updateColorVariable('success', this.value)">
                                    </div>
                                    <div class="col-4 mb-2">
                                        <label class="form-label small">Danger</label>
                                        <input type="color" class="form-control form-control-color" id="dangerColor" value="#dc3545" onchange="updateColorVariable('danger', this.value)">
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Background Options -->
                            <div class="mb-4">
                                <h6>Background</h6>
                                <div class="mb-2">
                                    <label class="form-label small">Background Color</label>
                                    <input type="color" class="form-control form-control-color" id="bgColor" value="#ffffff" onchange="updateBackgroundColor(this.value)">
                                </div>
                                <div class="mb-2">
                                    <label class="form-label small">Sidebar Color</label>
                                    <input type="color" class="form-control form-control-color" id="sidebarColor" value="#f8f9fa" onchange="updateSidebarColor(this.value)">
                                </div>
                            </div>
                            
                            <!-- Typography -->
                            <div class="mb-4">
                                <h6>Typography</h6>
                                <div class="mb-2">
                                    <label class="form-label small">Font Family</label>
                                    <select class="form-select form-select-sm" id="fontFamily" onchange="updateFontFamily(this.value)">
                                        <option value="'Segoe UI', Tahoma, Geneva, Verdana, sans-serif">Default</option>
                                        <option value="'Roboto', sans-serif">Roboto</option>
                                        <option value="'Open Sans', sans-serif">Open Sans</option>
                                        <option value="'Lato', sans-serif">Lato</option>
                                        <option value="'Montserrat', sans-serif">Montserrat</option>
                                    </select>
                                </div>
                                <div class="mb-2">
                                    <label class="form-label small">Base Font Size</label>
                                    <input type="range" class="form-range" id="fontSize" min="12" max="18" value="14" onchange="updateFontSize(this.value)">
                                    <small class="text-muted">Current: <span id="fontSizeValue">14px</span></small>
                                </div>
                            </div>
                            
                            <!-- Quick Actions -->
                            <div class="mb-4">
                                <h6>Quick Actions</h6>
                                <div class="d-grid gap-2">
                                    <button class="btn btn-outline-primary btn-sm" onclick="applyDarkTheme()">
                                        <i class="fas fa-moon me-1"></i>
                                        Apply Dark Theme
                                    </button>
                                    <button class="btn btn-outline-info btn-sm" onclick="applyLightTheme()">
                                        <i class="fas fa-sun me-1"></i>
                                        Apply Light Theme
                                    </button>
                                    <button class="btn btn-outline-success btn-sm" onclick="applyModernTheme()">
                                        <i class="fas fa-star me-1"></i>
                                        Apply Modern Theme
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Existing Customizations -->
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-list me-2"></i>
                                Current Customizations
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Page</th>
                                            <th>Last Modified</th>
                                            <th>Size</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="customizationsTable">
                                        <% if (customizations && customizations.length > 0) { %>
                                            <% customizations.forEach(function(custom) { %>
                                            <tr>
                                                <td><%= custom.page %></td>
                                                <td><%= new Date(custom.updated_at).toLocaleDateString() %></td>
                                                <td><%= custom.css_content ? (custom.css_content.length + ' chars') : '0 chars' %></td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-primary" onclick="editCustomization('<%= custom.page %>')">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteCustomization('<%= custom.page %>')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            <% }); %>
                                        <% } else { %>
                                        <tr>
                                            <td colspan="4" class="text-center text-muted">No customizations found</td>
                                        </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </main>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-eye me-2"></i>
                    Live Preview
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0">
                <iframe id="previewFrame" style="width: 100%; height: 80vh; border: none;"></iframe>
            </div>
        </div>
    </div>
</div>

<script>
let currentPage = '';
let originalCSS = '';

// Page customization functions
function loadPageCustomization() {
    const page = document.getElementById('pageSelect').value;
    if (!page) {
        document.getElementById('cssEditorSection').style.display = 'none';
        return;
    }
    
    currentPage = page;
    document.getElementById('cssEditorSection').style.display = 'block';
    
    // Load existing CSS for this page
    fetch(`/admin/api/ui-customization/${page}`)
        .then(response => response.json())
        .then(data => {
            const cssContent = data.css_content || getDefaultCSS(page);
            document.getElementById('cssEditor').value = cssContent;
            originalCSS = cssContent;
        })
        .catch(error => {
            console.error('Error loading customization:', error);
            document.getElementById('cssEditor').value = getDefaultCSS(page);
        });
}

function savePageCustomization() {
    if (!currentPage) return;
    
    const cssContent = document.getElementById('cssEditor').value;
    
    fetch('/admin/api/ui-customization', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            page: currentPage,
            css_content: cssContent
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showAlert('Customization saved successfully!', 'success');
            location.reload();
        } else {
            showAlert('Error saving customization: ' + data.error, 'danger');
        }
    })
    .catch(error => {
        showAlert('Error saving customization: ' + error.message, 'danger');
    });
}

// Color and styling functions
function updateColorVariable(type, color) {
    const cssEditor = document.getElementById('cssEditor');
    let css = cssEditor.value;
    
    const colorRule = `--bs-${type}: ${color};`;
    
    if (css.includes(':root')) {
        // Update existing root variables
        const rootRegex = /:root\s*{([^}]*)}/;
        const match = css.match(rootRegex);
        if (match) {
            let rootContent = match[1];
            const variableRegex = new RegExp(`--bs-${type}:[^;]*;?`);
            if (rootContent.match(variableRegex)) {
                rootContent = rootContent.replace(variableRegex, colorRule);
            } else {
                rootContent += `\n  ${colorRule}`;
            }
            css = css.replace(rootRegex, `:root {\n  ${rootContent.trim()}\n}`);
        }
    } else {
        // Add new root section
        css = `:root {\n  ${colorRule}\n}\n\n${css}`;
    }
    
    cssEditor.value = css;
}

function updateBackgroundColor(color) {
    updateCSSRule('body', 'background-color', color);
}

function updateSidebarColor(color) {
    updateCSSRule('.sidebar', 'background-color', color);
}

function updateFontFamily(font) {
    updateCSSRule('body', 'font-family', font);
}

function updateFontSize(size) {
    document.getElementById('fontSizeValue').textContent = size + 'px';
    updateCSSRule('body', 'font-size', size + 'px');
}

function updateCSSRule(selector, property, value) {
    const cssEditor = document.getElementById('cssEditor');
    let css = cssEditor.value;
    
    const rule = `${selector} {\n  ${property}: ${value};\n}`;
    
    // Simple append for now - in production, you'd want smarter CSS parsing
    css += `\n\n${rule}`;
    cssEditor.value = css;
}

// Theme functions
function applyDarkTheme() {
    const darkCSS = `
:root {
  --bs-primary: #0d6efd;
  --bs-success: #198754;
  --bs-danger: #dc3545;
  --bs-dark: #212529;
  --bs-light: #f8f9fa;
}

body {
  background-color: #1a1a1a;
  color: #ffffff;
}

.card {
  background-color: #2d2d2d;
  border-color: #404040;
  color: #ffffff;
}

.navbar, .sidebar {
  background-color: #212529 !important;
}

.table-dark {
  background-color: #343a40;
}

.btn-outline-primary {
  color: #6ea8fe;
  border-color: #6ea8fe;
}
`;
    document.getElementById('cssEditor').value = darkCSS;
}

function applyLightTheme() {
    const lightCSS = `
body {
  background-color: #ffffff;
  color: #212529;
}

.card {
  background-color: #ffffff;
  border: 1px solid #dee2e6;
}

.sidebar {
  background-color: #f8f9fa;
}
`;
    document.getElementById('cssEditor').value = lightCSS;
}

function applyModernTheme() {
    const modernCSS = `
:root {
  --bs-primary: #6366f1;
  --bs-success: #10b981;
  --bs-danger: #ef4444;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
}

.card {
  border: none;
  border-radius: 12px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  background-color: rgba(255, 255, 255, 0.9);
}

.btn {
  border-radius: 8px;
  font-weight: 500;
}

.sidebar {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 0 12px 12px 0;
}
`;
    document.getElementById('cssEditor').value = modernCSS;
}

function getDefaultCSS(page) {
    const defaults = {
        'login': `/* Login Page Customization */
.login-container {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.login-card {
  border-radius: 15px;
  box-shadow: 0 10px 25px rgba(0,0,0,0.1);
}`,
        'dashboard': `/* Dashboard Customization */
.dashboard-card {
  border-radius: 10px;
  transition: transform 0.2s;
}

.dashboard-card:hover {
  transform: translateY(-2px);
}`,
        'global': `/* Global Styles */
:root {
  --custom-primary: #007bff;
  --custom-success: #28a745;
  --custom-danger: #dc3545;
}`
    };
    
    return defaults[page] || `/* ${page} Customization */\n/* Add your custom CSS here */`;
}

function loadDefaultCSS() {
    if (currentPage) {
        document.getElementById('cssEditor').value = getDefaultCSS(currentPage);
    }
}

function togglePreview() {
    // In a real implementation, this would show a live preview
    showAlert('Preview functionality would show live changes here', 'info');
}

function exportCSS() {
    const css = document.getElementById('cssEditor').value;
    const blob = new Blob([css], { type: 'text/css' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${currentPage || 'custom'}-styles.css`;
    a.click();
    URL.revokeObjectURL(url);
}

function editCustomization(page) {
    document.getElementById('pageSelect').value = page;
    loadPageCustomization();
}

function deleteCustomization(page) {
    if (confirm(`Are you sure you want to delete the customization for ${page}?`)) {
        // Delete implementation would go here
        showAlert(`Customization for ${page} deleted`, 'success');
    }
}

function saveAllCustomizations() {
    if (currentPage) {
        savePageCustomization();
    } else {
        showAlert('No page selected for customization', 'warning');
    }
}

function resetCustomizations() {
    if (confirm('Are you sure you want to reset all customizations? This action cannot be undone.')) {
        document.getElementById('cssEditor').value = '';
        showAlert('Customizations reset', 'info');
    }
}

// Alert function
function showAlert(message, type) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.container-fluid');
    container.insertBefore(alertDiv, container.firstChild);
    
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}
</script>

<%- include('../partials/footer') %>